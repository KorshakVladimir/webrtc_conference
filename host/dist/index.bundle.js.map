{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/clamp/index.js","webpack:///./node_modules/audio-frequency-to-index/index.js","webpack:///./node_modules/analyser-frequency-average/index.js","webpack:///./node_modules/voice-activity-detection/index.js","webpack:///./src/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","min","max","clamp","frequency","sampleRate","frequencyBinCount","nyquist","index","Math","round","frequencyToIndex","analyserFrequencyAverage","div","analyser","frequencies","minHz","maxHz","context","binCount","start","end","count","sum","bind","floatData","analyserFrequency","audioContext","stream","opts","defaults","fftSize","bufferLen","smoothingTimeConstant","minCaptureFreq","maxCaptureFreq","noiseCaptureDuration","minNoiseLevel","maxNoiseLevel","avgNoiseMultiplier","onVoiceStart","onVoiceStop","onUpdate","val","options","key","baseLevel","voiceScale","activityCounter","activityCounterMin","activityCounterMax","activityCounterThresh","envFreqRange","isNoiseCapturing","prevVadState","undefined","vadState","captureTimeout","source","createMediaStreamSource","createAnalyser","scriptProcessorNode","createScriptProcessor","connect","destination","disconnect","onaudioprocess","Uint8Array","getByteFrequencyData","average","push","setTimeout","averageEnvFreq","filter","sort","length","reduce","destroy","clearTimeout","localStream","pc","remoteStream","peer","is_host","vad","localVideo","document","querySelector","peer_connections","socket","io","pcConfig","iceServers","urls","gotStream","window","AudioContext","webkitAudioContext","srcObject","console","log","add_voice_detection","createPeerConnection","addStream","sendMessage","message","emit","len","RTCPeerConnection","setConfiguration","onicecandidate","handleIceCandidate","onaddstream","handleRemoteStreamAdded","onremovestream","handleRemoteStreamRemoved","e","event","candidate","type","label","sdpMLineIndex","id","sdpMid","handleCreateOfferError","setLocalAndSendMessage","sessionDescription","setLocalDescription","onCreateSessionDescriptionError","error","on","peer_id","my_own_id","createOffer","navigator","mediaDevices","getUserMedia","audio","video","then","catch","alert","setRemoteDescription","RTCSessionDescription","createAnswer","RTCIceCandidate","addIceCandidate","handleRemoteHangup","onbeforeunload"],"mappings":"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","file":"index.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = clamp\n\nfunction clamp(value, min, max) {\n  return min < max\n    ? (value < min ? min : value > max ? max : value)\n    : (value < max ? max : value > min ? min : value)\n}\n","var clamp = require('clamp')\n\nmodule.exports = frequencyToIndex\nfunction frequencyToIndex (frequency, sampleRate, frequencyBinCount) {\n  var nyquist = sampleRate / 2\n  var index = Math.round(frequency / nyquist * frequencyBinCount)\n  return clamp(index, 0, frequencyBinCount)\n}\n","var frequencyToIndex = require('audio-frequency-to-index')\n\nmodule.exports = analyserFrequencyAverage.bind(null, 255)\nmodule.exports.floatData = analyserFrequencyAverage.bind(null, 1)\n\nfunction analyserFrequencyAverage (div, analyser, frequencies, minHz, maxHz) {\n  var sampleRate = analyser.context.sampleRate\n  var binCount = analyser.frequencyBinCount\n  var start = frequencyToIndex(minHz, sampleRate, binCount)\n  var end = frequencyToIndex(maxHz, sampleRate, binCount)\n  var count = end - start\n  var sum = 0\n  for (; start < end; start++) {\n    sum += frequencies[start] / div\n  }\n  return count === 0 ? 0 : (sum / count)\n}\n","'use strict';\nvar analyserFrequency = require('analyser-frequency-average');\n\nmodule.exports = function(audioContext, stream, opts) {\n\n  opts = opts || {};\n\n  var defaults = {\n    fftSize: 1024,\n    bufferLen: 1024,\n    smoothingTimeConstant: 0.2,\n    minCaptureFreq: 85,         // in Hz\n    maxCaptureFreq: 255,        // in Hz\n    noiseCaptureDuration: 1000, // in ms\n    minNoiseLevel: 0.3,         // from 0 to 1\n    maxNoiseLevel: 0.7,         // from 0 to 1\n    avgNoiseMultiplier: 1.2,\n    onVoiceStart: function() {\n    },\n    onVoiceStop: function() {\n    },\n    onUpdate: function(val) {\n    }\n  };\n\n  var options = {};\n  for (var key in defaults) {\n    options[key] = opts.hasOwnProperty(key) ? opts[key] : defaults[key];\n  }\n\n  var baseLevel = 0;\n  var voiceScale = 1;\n  var activityCounter = 0;\n  var activityCounterMin = 0;\n  var activityCounterMax = 60;\n  var activityCounterThresh = 5;\n\n  var envFreqRange = [];\n  var isNoiseCapturing = true;\n  var prevVadState = undefined;\n  var vadState = false;\n  var captureTimeout = null;\n\n  var source = audioContext.createMediaStreamSource(stream);\n  var analyser = audioContext.createAnalyser();\n  analyser.smoothingTimeConstant = options.smoothingTimeConstant;\n  analyser.fftSize = options.fftSize;\n\n  var scriptProcessorNode = audioContext.createScriptProcessor(options.bufferLen, 1, 1);\n  connect();\n  scriptProcessorNode.onaudioprocess = monitor;\n\n  if (isNoiseCapturing) {\n    //console.log('VAD: start noise capturing');\n    captureTimeout = setTimeout(init, options.noiseCaptureDuration);\n  }\n\n  function init() {\n    //console.log('VAD: stop noise capturing');\n    isNoiseCapturing = false;\n\n    envFreqRange = envFreqRange.filter(function(val) {\n      return val;\n    }).sort();\n    var averageEnvFreq = envFreqRange.length ? envFreqRange.reduce(function (p, c) { return Math.min(p, c) }, 1) : (options.minNoiseLevel || 0.1);\n\n    baseLevel = averageEnvFreq * options.avgNoiseMultiplier;\n    if (options.minNoiseLevel && baseLevel < options.minNoiseLevel) baseLevel = options.minNoiseLevel;\n    if (options.maxNoiseLevel && baseLevel > options.maxNoiseLevel) baseLevel = options.maxNoiseLevel;\n\n    voiceScale = 1 - baseLevel;\n\n    //console.log('VAD: base level:', baseLevel);\n  }\n\n  function connect() {\n    source.connect(analyser);\n    analyser.connect(scriptProcessorNode);\n    scriptProcessorNode.connect(audioContext.destination);\n  }\n\n  function disconnect() {\n    scriptProcessorNode.disconnect();\n    analyser.disconnect();\n    source.disconnect();\n  }\n\n  function destroy() {\n    captureTimeout && clearTimeout(captureTimeout);\n    disconnect();\n    scriptProcessorNode.onaudioprocess = null;\n  }\n\n  function monitor() {\n    var frequencies = new Uint8Array(analyser.frequencyBinCount);\n    analyser.getByteFrequencyData(frequencies);\n\n    var average = analyserFrequency(analyser, frequencies, options.minCaptureFreq, options.maxCaptureFreq);\n    if (isNoiseCapturing) {\n      envFreqRange.push(average);\n      return;\n    }\n\n    if (average >= baseLevel && activityCounter < activityCounterMax) {\n      activityCounter++;\n    } else if (average < baseLevel && activityCounter > activityCounterMin) {\n      activityCounter--;\n    }\n    vadState = activityCounter > activityCounterThresh;\n\n    if (prevVadState !== vadState) {\n      vadState ? onVoiceStart() : onVoiceStop();\n      prevVadState = vadState;\n    }\n\n    options.onUpdate(Math.max(0, average - baseLevel) / voiceScale);\n  }\n\n  function onVoiceStart() {\n    options.onVoiceStart();\n  }\n\n  function onVoiceStop() {\n    options.onVoiceStop();\n  }\n\n  return {connect: connect, disconnect: disconnect, destroy: destroy};\n};","'use strict';\nvar vad = require('../node_modules/voice-activity-detection/index.js');\n\n\nvar localStream;\nvar pc;\nvar remoteStream;\nvar peer;\nvar is_host;\nvar localVideo = document.querySelector('#localVideo');\n/////////////////////////////////////////////\n\nvar room = 'foo';\nvar peer_connections =[];\nvar socket = io.connect(\"localhost:9090\");\nvar audioContext;\nvar pcConfig = {\n  'iceServers': [\n    {'urls': 'stun:stun.l.google.com:19302'},\n    // {'urls': 'turn:numb.viagenie.ca'},\n    // {'urls': 'turn:d1.synergy.net:3478'}\n  ]\n};\n\nif (room !== '') {\n  socket.emit('create or join', room);\n}\nsocket.on('join', function (peer_id, my_own_id){\n  peer = peer_id;\n  console.log(my_own_id);\n  createPeerConnection();\n});\nsocket.on('joined', function(peer_id) {\n  console.log(\"joined\");\n  peer = peer_id;\n  if (!is_host) {\n    createPeerConnection();\n    pc.addStream(remoteStream);\n  }\n  doCall()\n});\n\nsocket.on('created', function(my_own_id) {\n  console.log(my_own_id);\n  is_host = true;\n  navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: true\n  })\n  .then(gotStream)\n  .catch(function(e) {\n    alert('getUserMedia() error: ' + e);\n  });\n});\n\nfunction add_voice_detection(stream) {\n  const options = {\n    fftSize: 1024,\n    bufferLen: 1024,\n    smoothingTimeConstant: 0.2,\n    minCaptureFreq: 85,         // in Hz\n    maxCaptureFreq: 255,        // in Hz\n    noiseCaptureDuration: 1000, // in ms\n    minNoiseLevel: 0.3,         // from 0 to 1\n    maxNoiseLevel: 0.7,         // from 0 to 1\n    avgNoiseMultiplier: 1.2,\n    onVoiceStart: function() {console.log(\"start\")},\n    onVoiceStop: function() {console.log(\"stop\")},\n  };\n  vad(audioContext, stream, options);\n}\n\nfunction gotStream(stream) {\n\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\n  audioContext = new AudioContext();\n  localStream = stream;\n  localVideo.srcObject = stream;\n  add_voice_detection(stream);\n  createPeerConnection();\n  pc.addStream(localStream);\n}\n////////////////////////////////////////////////\n\nfunction sendMessage(message) {\n  socket.emit('message', peer, message);\n}\n\n// This client receives a message\nsocket.on('message', function(message) {\n  if (message.type === 'offer') {\n    pc.setRemoteDescription(new RTCSessionDescription(message));\n    doAnswer();\n  } else if (message.type === 'answer') {\n    pc.setRemoteDescription(new RTCSessionDescription(message));\n  } else if (message.type === 'candidate') {\n    var candidate = new RTCIceCandidate({\n      sdpMLineIndex: message.label,\n      candidate: message.candidate\n    });\n    pc.addIceCandidate(candidate);\n  } else if (message === 'bye') {\n    handleRemoteHangup();\n  }\n});\n\n////////////////////////////////////////////////////\n\nfunction doAnswer() {\n  console.log('Sending answer to peer.');\n  pc.createAnswer().then(\n    setLocalAndSendMessage,\n    onCreateSessionDescriptionError\n  );\n}\n\n/////////////////////////////////////////////////////////\n\nfunction createPeerConnection() {\n  try {\n    const len = peer_connections.push(new RTCPeerConnection(null));\n    pc = peer_connections[len-1];\n    pc.setConfiguration(pcConfig);\n    pc.onicecandidate = handleIceCandidate;\n    pc.onaddstream = handleRemoteStreamAdded;\n    pc.onremovestream = handleRemoteStreamRemoved;\n  } catch (e) {\n    console.log(e);\n    return;\n  }\n}\n\nfunction handleIceCandidate(event) {\n  if (event.candidate) {\n    sendMessage({\n      type: 'candidate',\n      label: event.candidate.sdpMLineIndex,\n      id: event.candidate.sdpMid,\n      candidate: event.candidate.candidate\n    });\n  } else {\n  }\n}\n\nfunction handleCreateOfferError(event) {\n}\n\nfunction doCall() {\n  pc.createOffer(setLocalAndSendMessage, handleCreateOfferError);\n}\n\nfunction setLocalAndSendMessage(sessionDescription) {\n  pc.setLocalDescription(sessionDescription);\n  sendMessage(sessionDescription);\n}\n\nfunction handleRemoteStreamAdded(event) {\n  remoteStream = event.stream;\n  localVideo.srcObject = remoteStream;\n}\n//\nfunction handleRemoteStreamRemoved(event) {\n}\n\nfunction onCreateSessionDescriptionError(error) {\n}\n\nwindow.onbeforeunload = function() {\n  socket.emit('remove_peer', peer);\n};"],"sourceRoot":""}